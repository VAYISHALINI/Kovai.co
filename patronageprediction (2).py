# -*- coding: utf-8 -*-
"""PatronagePrediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sX8iQHie-Ej1D5A8tPmmnbG9BpGkpyEO
"""

import pandas as pd
from statsmodels.tsa.arima.model import ARIMA
import pandas as pd

data=pd.read_csv('/content/sample_data/Daily_Public_Transport_Passenger_Boardings_By_Ticket_Type_20240513.csv')

df=pd.DataFrame(data)
# Assuming 'Date' is the index of your DataFrame and 'MyWay' is the column containing ticket counts
# First, ensure the data is in a time series format
time_series = df.set_index('Date')['MyWay']


from sklearn.metrics import mean_absolute_error, mean_squared_error
import numpy as np

# Split the data into training and testing sets
train_data = time_series[:-7]  # Assuming last 7 days are for testing
test_data = time_series[-7:]

# Fit the ARIMA model
model = ARIMA(time_series, order=(5,1,0))  # ARIMA(p,d,q): p = autoregressive lags, d = differencing, q = moving average lags
fit_model = model.fit()

# Forecast for the next 7 days
forecast = fit_model.forecast(steps=7)

# Print the forecasted values
print("Forecasted Patronage for the Next 7 Days (MyWay):\n", forecast)




mse = mean_squared_error(test_data, forecast)


# Print error metrics

print("Mean Squared Error (MSE):", mse)

import matplotlib.pyplot as plt
import seaborn as sns

# Plotting the observed values and the predicted values
plt.figure(figsize=(12, 6))
plt.plot(time_series.index, time_series, label='Observed', color='blue')
plt.plot(forecast.index, forecast, label='Predicted', linestyle='--', color='red')

# Adding labels and title
plt.title('ARIMA Model Forecast vs Observed for MyWay Ticket Counts')
plt.xlabel('Date')
plt.ylabel('Ticket Counts')
plt.legend()
plt.grid(True)
plt.show()